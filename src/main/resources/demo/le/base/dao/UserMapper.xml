<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.le.base.dao.UserMapper">
	<resultMap id="BaseResultMap" type="User">
		<id column="ID" property="id" jdbcType="DECIMAL" />
		<result column="USERNAME" property="username" jdbcType="CHAR" />
		<result column="NICKNAME" property="nickname" jdbcType="CHAR" />
		<result column="PASSWORD" property="password" jdbcType="CHAR" />
		<result column="STATUS" property="status" jdbcType="DECIMAL" />
		<result column="REGISTER_DATE" property="registerDate" jdbcType="TIMESTAMP" />
		<result column="PREVIOUS_DATE" property="previousDate" jdbcType="TIMESTAMP" />
		<result column="PREVIOUS_IP" property="previousIp" jdbcType="CHAR" />
		<result column="LAST_DATE" property="lastDate" jdbcType="TIMESTAMP" />
		<result column="LAST_IP" property="lastIp" jdbcType="CHAR" />
		<result column="SECURITY_DATE" property="securityDate" jdbcType="TIMESTAMP" />
		<result column="SECURITY_IP" property="securityIp" jdbcType="VARCHAR" />
		<result column="SECURITY_NUMBER" property="securityNumber" jdbcType="DECIMAL" />
		<result column="CODE" property="code" jdbcType="CHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		ID,
		USERNAME,
		NICKNAME,
		PASSWORD, STATUS,
		REGISTER_DATE,
		PREVIOUS_DATE,
		PREVIOUS_IP,
		LAST_DATE,
		LAST_IP,
		SECURITY_DATE,
		SECURITY_IP,
		SECURITY_NUMBER,
		CODE
	</sql>

	<select id="selectByKey" resultMap="BaseResultMap" parameterType="long">
		select
		<include refid="Base_Column_List" />
		from BASE_USER
		where ID = #{id,jdbcType=DECIMAL}
	</select>
	<select id="selectByUsername" resultMap="BaseResultMap" parameterType="string">
		select
		<include refid="Base_Column_List" />
		from BASE_USER
		where Trim(USERNAME) = #{username}
	</select>
	<select id="selectByArray" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from BASE_USER
		<where>
			<if test="array != null and array.length &gt; 0 ">
				ID in <foreach collection="array" item="item" open="(" separator="," close=")">
					<if test="item != null">#{item, jdbcType=DECIMAL }</if>
				</foreach>
			</if>
		</where>
	</select>
	<select id="selectByList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from BASE_USER
		<where>
			<if test="list != null and list.size &gt; 0 ">
				ID in <foreach collection="list" item="item" open="(" separator="," close=")">
					<if test="item != null">#{item, jdbcType=DECIMAL }</if>
				</foreach>
			</if>
		</where>
	</select>
	<delete id="delete" parameterType="long">
		delete from BASE_USER
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="User">
		insert into BASE_USER (
			<include refid="Base_Column_List" />
		) values (
			#{id,jdbcType=DECIMAL},
			#{username,jdbcType=CHAR},
			#{nickname,jdbcType=CHAR},
			#{password,jdbcType=CHAR},
			#{status,jdbcType=DECIMAL},
			#{registerDate,jdbcType=TIMESTAMP},
			#{previousDate,jdbcType=TIMESTAMP},
			#{previousIp,jdbcType=CHAR},
			#{lastDate,jdbcType=TIMESTAMP},
			#{lastIp,jdbcType=CHAR},
			#{securityDate,jdbcType=TIMESTAMP},
			#{securityIp,jdbcType=VARCHAR},
			#{securityNumber,jdbcType=DECIMAL},
			#{code,jdbcType=CHAR})
	</insert>
	<insert id="insertSelective" parameterType="User">
		<selectKey keyProperty="id" order="BEFORE" resultType="long">
			select SEQ_USER_ID.nextval from dual
		</selectKey>
		insert into
		BASE_USER
		<trim prefix="(" suffix=")" suffixOverrides=",">
				ID,
			<if test="username != null">
				USERNAME,
			</if>
			<if test="nickname != null">
				NICKNAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="registerDate != null">
				REGISTER_DATE,
			</if>
			<if test="previousDate != null">
				PREVIOUS_DATE,
			</if>
			<if test="previousIp != null">
				PREVIOUS_IP,
			</if>
			<if test="lastDate != null">
				LAST_DATE,
			</if>
			<if test="lastIp != null">
				LAST_IP,
			</if>
			<if test="securityDate != null">
				SECURITY_DATE,
			</if>
			<if test="securityIp != null">
				SECURITY_IP,
			</if>
			<if test="securityNumber != null">
				SECURITY_NUMBER,
			</if>
			<if test="code != null">
				CODE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
				#{id,jdbcType=DECIMAL},
			<if test="username != null">
				#{username,jdbcType=CHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=CHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=CHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=DECIMAL},
			</if>
			<if test="registerDate != null">
				#{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="previousDate != null">
				#{previousDate,jdbcType=TIMESTAMP},
			</if>
			<if test="previousIp != null">
				#{previousIp,jdbcType=CHAR},
			</if>
			<if test="lastDate != null">
				#{lastDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastIp != null">
				#{lastIp,jdbcType=CHAR},
			</if>
			<if test="securityDate != null">
				#{securityDate,jdbcType=TIMESTAMP},
			</if>
			<if test="securityIp != null">
				#{securityIp,jdbcType=VARCHAR},
			</if>
			<if test="securityNumber != null">
				#{securityNumber,jdbcType=DECIMAL},
			</if>
			<if test="code != null">
				#{code,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateSelective" parameterType="User">
		update BASE_USER
		<set>
			<if test="username != null">
				USERNAME = #{username,jdbcType=CHAR},
			</if>
			<if test="nickname != null">
				NICKNAME = #{nickname,jdbcType=CHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=CHAR},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=DECIMAL},
			</if>
			<if test="registerDate != null">
				REGISTER_DATE = #{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="previousDate != null">
				PREVIOUS_DATE = #{previousDate,jdbcType=TIMESTAMP},
			</if>
			<if test="previousIp != null">
				PREVIOUS_IP = #{previousIp,jdbcType=CHAR},
			</if>
			<if test="lastDate != null">
				LAST_DATE = #{lastDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastIp != null">
				LAST_IP = #{lastIp,jdbcType=CHAR},
			</if>
			<if test="securityDate != null">
				SECURITY_DATE = #{securityDate,jdbcType=TIMESTAMP},
			</if>
			<if test="securityIp != null">
				SECURITY_IP = #{securityIp,jdbcType=VARCHAR},
			</if>
			<if test="securityNumber != null">
				SECURITY_NUMBER = #{securityNumber,jdbcType=DECIMAL},
			</if>
			<if test="code != null">
				CODE = #{code,jdbcType=CHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>
	<update id="update" parameterType="User">
		update BASE_USER
		set
			USERNAME = #{username,jdbcType=CHAR},
			NICKNAME = #{nickname,jdbcType=CHAR},
			PASSWORD = #{password,jdbcType=CHAR},
			STATUS = #{status,jdbcType=DECIMAL},
			REGISTER_DATE = #{registerDate,jdbcType=TIMESTAMP},
			PREVIOUS_DATE = #{previousDate,jdbcType=TIMESTAMP},
			PREVIOUS_IP = #{previousIp,jdbcType=CHAR},
			LAST_DATE = #{lastDate,jdbcType=TIMESTAMP},
			LAST_IP = #{lastIp,jdbcType=CHAR},
			SECURITY_DATE = #{securityDate,jdbcType=TIMESTAMP},
			SECURITY_IP = #{securityIp,jdbcType=VARCHAR},
			SECURITY_NUMBER = #{securityNumber,jdbcType=DECIMAL},
			CODE = #{code,jdbcType=CHAR}
		where ID = #{id,jdbcType=DECIMAL}
	</update>
</mapper>